rm(list = ls())
for (l in 5:6){
  
  library(Rcpp)
  compileAttributes("~/Dropbox (University of Michigan)/VBVaccine/Rcode/VBVaccine")
  setwd("~/Dropbox (University of Michigan)/VBVaccine/Rcode/simulation")
  devtools::load_all("../VBVaccine")
  
  J=300
  p=3
  
  n_vec=c(10000, 10000, 50000, 50000, 200000, 200000)
  p_alpha = cbind(prop = c(0.5,0.9, 0.5,0.9,0.5,0.9),
                  alpha = c(-5, -5, -5, -5, -5, -5))
  
  stage=10
  
  n_sim = 100
  sim=44
  
  
  Alpha_true = matrix(0, ncol=J, nrow=p)
  
  n=n_vec[l]
  
  vax_p = p_alpha[l,1]
  alpha_mean = p_alpha[l,2] 
  
  idx = split(1:n, cut(1:n, stage))
  set.seed(123)
  #beta = c(rep(1,50), rep(-1,50), rep(0,100))
  beta_true = c(rnorm(300,0,1))
  Alpha_true[1,] = rnorm(J, alpha_mean, sd=1)
  Alpha_true[2,] = rnorm(J)
  Alpha_true[3,]= rnorm(J)
  
  ind = order(beta_true,decreasing = T)
  beta_true = beta_true[ind]
  Alpha_true = Alpha_true[, ind]
  
  nc_n = 50
  nc_mean=0.5
  nc_sd = 0.5
  nc_beta = rnorm(nc_n, nc_mean, nc_sd)
  nc_mean_empirical = mean(nc_beta)
  nc_idx = c((J+1):(J+nc_n))
  J = J+nc_n
  nc_alpha = matrix(0, ncol=nc_n, nrow=p)
  nc_alpha[1,] = rnorm(nc_n, -5, sd=1)
  nc_alpha[2,] = rnorm(nc_n)
  nc_alpha[3,]= rnorm(nc_n)
  
  beta = c(beta_true + nc_mean_empirical, nc_beta)
  Alpha = cbind(Alpha_true, nc_alpha)
  
  ### set 100 small beta to 0
  # ind = order(abs(beta),decreasing = T)
  # beta[ind[(J-99):J]] = 0
  
  
  filename = paste0("~/Dropbox (University of Michigan)/VBVaccine/Rcode/simulation/sim",sim,"/data_J350_n",n,"_10stg_p",vax_p,
                    "_alpha", alpha_mean, "betaN_m0_sd1.RData")
  sim_data = list()
  # sim_data_seq = list()
  for (seed in 1:n_sim) {
    set.seed(seed)
    sim_data[[seed]] <- lapply(1:stage, function(j){
      X = data.frame(intercept = 1, 
                     Age =  sample(c(0,1,2),n,prob = c(0.3,0.3,0.4),replace=T),
                     Male=rbinom(n,1,0.3),
                     V = rbinom(n,1,vax_p))
      counts <- count(X, intercept, V, Age,Male)
      V = counts$V
      X = as.matrix(counts[, c(1,3,4)])
      nn = counts$n
      
      PA = X %*% Alpha +  V %*% t(beta)
      PA =  plogis(PA)
      
      A_temp = rbinom(length(PA), size = nn, prob = c(PA))
      A_temp = matrix(A_temp, nrow(PA), ncol(PA))
      colnames(A_temp) = seq(1:ncol(A_temp))
      
      list(A = A_temp,
           X =  X,
           V = V,
           nn = nn)
    })
    
    for (j in 2:stage){
      sim_data[[seed]][[j]]$A = sim_data[[seed]][[j]]$A + sim_data[[seed]][[j-1]]$A
      sim_data[[seed]][[j]]$nn = sim_data[[seed]][[j]]$nn + sim_data[[seed]][[j-1]]$nn
    }
  }
  save(beta, Alpha, 
       beta_true, Alpha_true,
       nc_mean, nc_sd,nc_idx,
       sim_data, vax_p, alpha_mean,
       n_sim,stage, idx,
       file=filename)
  
  
}




