library(readr)
library(readxl)
library(dplyr)
library(tidyr)
library(parallel)
library(doParallel)
neg_control<- read_xlsx("~/Dropbox (University of Michigan)/BayesianVaccine/Rcode/yuan/data/Negative controls Final.xlsx",
                        sheet = "Final35")
MedDRA <- read_csv("~/Dropbox (University of Michigan)/BayesianVaccine/Rcode/yuan/data/final_MedDRA.csv")
MovePTterms <- read_xlsx("~/Dropbox (University of Michigan)/BayesianVaccine/Rcode/yuan/data/MovePTterms.xlsx", sheet = "Other") %>%
  rename(PT = AE_NAME) %>%
  mutate(HLGT = "Others",
         soc = "Others")
MedDRA <- MedDRA %>%
  select(soc, HLGT, PT) %>%
  add_row(soc="Neoplasms benign, malignant and unspecified (incl cysts and polyps)", HLGT="Cancer", PT="Cancer")%>%
  add_row(soc="Others", HLGT="Others", PT="Others")%>%
  distinct()%>%
  rbind(MovePTterms)

# neg_control <- neg_control %>%
#   filter(PT != "Hypoxia") 


data <- read_csv("~/Dropbox (University of Michigan)/VBVaccine/Rcode/data/full_dds_covid_flu_2016_20231229.csv",
                 col_types = cols(DATEDIED = col_skip()))


nrow(data[data$VAX_TYPE=="COVID19",])
###check Neg control counts 
neg_cnt <- data %>% 
  filter(AE_NAME %in% neg_control$PT)%>%
  count(AE_NAME)

### organize AE terms 
data <- data %>%
  mutate(AE_NAME = replace(AE_NAME,
                           AE_NAME %in% MedDRA[MedDRA$soc == "Neoplasms benign, malignant and unspecified (incl cysts and polyps)",]$PT,
                           "Cancer"),
         AE_NAME = replace(AE_NAME,
                           (AE_NAME %in% MedDRA[MedDRA$soc %in% c("Product issues","Investigations","Others"), ]$PT)
                           & (!AE_NAME %in% neg_control$PT), "Others"))


### remove AE prior to covid trial date
data <- data%>%
  mutate(VAX_DATE = as.POSIXct(VAX_DATE, format = '%m/%d/%Y'))%>%
  filter(!(VAX_DATE < "2020-03-16" & VAX_TYPE=="COVID19"))
  
# data %>%
#   filter(VAX_DATE>"2020-03-16" & VAX_TYPE=="COVID19")%>%
#   count()

### remove IDs receive both covid & flu vaccines
data %>%
  group_by(VAERS_ID) %>%
  mutate(n = length(unique(VAX_LABEL))) %>%
  filter(n == 1) %>%
  ungroup() %>%
  select(-n) ->
  data


### check flu vaccine types
table(data$VAX_TYPE[!data$VAX_TYPE=="COVID19"])
table(data$VAX_NAME[data$VAX_TYPE=="COVID19"])

#### exclude unknown sex and covid vaccine 
data %>%
  filter(!VAX_NAME == "COVID19 (COVID19 (UNKNOWN))")%>%
  filter(AE_NAME %in% MedDRA$PT)%>%
  filter(SEX != 'U')  ->
  data


data %>%
  mutate(VAX_TYPE = ifelse(VAX_TYPE == "COVID19", "COVID19", "FLU")) ->
  data

data %>%
  mutate(RECVDATE = as.POSIXct(RECVDATE, format = '%m/%d/%Y'),)%>%
  distinct(VAERS_ID, VAX_TYPE,AE_NAME, AGE, SEX, RECVDATE) %>%
  select(VAERS_ID,VAX_TYPE,AE_NAME, AGE, SEX, RECVDATE)%>%
  drop_na() ->
  data


# data %>%
#   mutate(Male = as.numeric(SEX == 'M')) %>%
#   mutate(Age = case_when(AGE <= 18 ~ 1,
#                          AGE > 18 & AGE <= 30 ~ 2,
#                          AGE > 30 & AGE <= 50 ~ 0,
#                          AGE > 50 & AGE <= 65 ~ 3,
#                          AGE > 65 ~ 4))%>%
#   select(VAERS_ID, AE_NAME, VAX_TYPE, Age , Male, RECVDATE) ->
#   data

data %>%
  mutate(Male = as.numeric(SEX == 'M')) %>%
  mutate(Age = case_when(AGE <= 18 ~ 1,
                         AGE > 18 & AGE <= 30 ~ 2,
                         AGE > 30 & AGE <= 50 ~ 0,
                         AGE > 50 & AGE <= 65 ~ 3,
                         AGE > 65 ~ 4 ))%>%
  select(VAERS_ID, AE_NAME, VAX_TYPE, Age , Male, RECVDATE) ->
  data


data %>%
  arrange(-desc(VAERS_ID)) %>%
  mutate(V = as.numeric(VAX_TYPE == 'COVID19'))%>%
  distinct(VAERS_ID, AE_NAME, Age, Male, V, RECVDATE) ->
  data

table(data$Age)/nrow(data)
table(data$Age[data$V==0])/nrow(data[data$V==0,])
table(data$Age[data$V==1])/nrow(data[data$V==1,])
### filter AE by count
AE_num =25
covid_num = 1
flu_num = 5

data %>%
  group_by(AE_NAME) %>%
  mutate(n = length(unique(VAERS_ID))) %>%
  filter(n >= AE_num) %>%
  select(-n) %>%
  ungroup()->
  data

AE_filter = data %>% count(AE_NAME) 
flu_filter <- data %>% filter( V == 0) %>% count(AE_NAME) %>% filter(n >= flu_num)
covid_filter <- data %>% filter( V == 1) %>% count(AE_NAME) %>% filter(n >= covid_num)
common_AE = intersect(flu_filter$AE_NAME, covid_filter$AE_NAME)
data <- data %>% filter(AE_NAME %in% common_AE)

base_date = "2021-06-01"
base_data <- data %>%
  filter(data$RECVDATE < base_date)


seq_breaks = "month"
seq_data <- data %>%
  filter(data$RECVDATE >= base_date) %>%
  mutate(tempdate = cut(RECVDATE, breaks = seq_breaks))
seq_data <- split(seq_data, seq_data$tempdate)


library(Rcpp)
compileAttributes("~/Dropbox (University of Michigan)/VBVaccine/Rcode/VBVaccine")
devtools::load_all("~/Dropbox (University of Michigan)/VBVaccine/Rcode/VBVaccine")

base_data_agg = aggregate_realdata(base_data)
# base_cnt <- data %>% group_by( V) %>% count(AE_NAME)
# glms = get_glm_coefs(base_data_agg, cutoff_beta = NULL)
# 
# max(glms$beta)
# min(glms$beta)

seq_data_agg = lapply(1:length(seq_data), function(i){
  aggregate_realdata(seq_data[[i]])
})

save(data, base_data, seq_data, base_data_agg, seq_data_agg,
     file="~/Dropbox (University of Michigan)/VBVaccine/Rcode/data/COVID_FLU_2016_20231229_age5_AE25_0305.RData")

accu_data <- list()
accu_data[[1]] <- base_data_agg
accu_temp = base_data_agg
base_cov = cbind(accu_temp$X, accu_temp$V)
num_t <- length(seq_data_agg)
for(t in 1:num_t){
  temp_data = seq_data_agg[[t]]
  temp_aes = colnames(temp_data$A)
  
  new_AE = colnames(temp_data$A)[(!colnames(temp_data$A) %in% colnames(accu_temp$A))]
  if(length(new_AE) != 0){
    new_mat <- matrix(0, nrow = nrow(accu_temp$A), ncol = length(new_AE))
    colnames(new_mat) = new_AE
    accu_temp$A = cbind(accu_temp$A, new_mat)
    accu_temp$A =  accu_temp$A[, sort(colnames(accu_temp$A))]
  }
  
  temp_cov = cbind(temp_data$X, temp_data$V)
  
  row_ind <- sapply(1:nrow(base_cov), function(j)
    any(apply( temp_cov, 1, function(x, vec) isTRUE(all.equal(x, vec)), base_cov[j,])))
  
  accu_temp$A[row_ind, temp_aes] = accu_temp$A[row_ind, temp_aes] + temp_data$A
  accu_temp$nn[row_ind] = accu_temp$nn[row_ind] + temp_data$nn
  accu_data[[t+1]] = accu_temp
  
  glms = get_glm_coefs(accu_data[[t+1]], cutoff_beta = NULL)
  print(sum(abs(glms$beta)>10))
  
  
}
save(data, base_data, seq_data, base_data_agg, seq_data_agg, accu_data, 
     file="~/Dropbox (University of Michigan)/VBVaccine/Rcode/data/COVID_FLU_2016_20231229_seq_age5_AE25_0305.RData")

load("~/Dropbox (University of Michigan)/VBVaccine/Rcode/data/COVID_FLU_2016_20230609_age3_0305.RData")

# base_data_sub <- base_data_agg
# AE_sum <- colSums(base_data_sub$A)
# covid_sum <- colSums(base_data_sub$A[base_data_sub$V == 1, ])
# flu_sum <- colSums(base_data_sub$A[base_data_sub$V == 0, ])
# 
# 
# base_data_sub$A = base_data_sub$A[, (AE_sum>= 25) & 
#                                     (covid_sum >= 1) &
#                                     (flu_sum >= 5)]
# AEs <- colnames(base_data_sub$A)
# 
# accu_data <- list()
# accu_data[[1]] <- base_data_agg
# accu_data_sub <- list()
# accu_data_sub[[1]] <- base_data_sub
# base_cov = cbind(base_data_agg$X, base_data_agg$V)
# num_t <- length(seq_data_agg)
# for(t in 1:num_t){
#   temp_data = seq_data_agg[[t]]
#   temp_aes = colnames(temp_data$A)
#   
#   new_AE = colnames(temp_data$A)[(!colnames(temp_data$A) %in% colnames(base_data_agg$A))]
#   if(length(new_AE) != 0){
#     new_mat <- matrix(0, nrow = nrow(base_data_agg$A), ncol = length(new_AE))
#     colnames(new_mat) = new_AE
#     base_data_agg$A = cbind(base_data_agg$A, new_mat)
#     base_data_agg$A =  base_data_agg$A[, sort(colnames(base_data_agg$A))]
#   }
#   
#   temp_cov = cbind(temp_data$X, temp_data$V)
#   
#   row_ind <- sapply(1:nrow(base_cov), function(j)
#     any(apply( temp_cov, 1, function(x, vec) isTRUE(all.equal(x, vec)), base_cov[j,])))
#   
#   base_data_agg$A[row_ind, temp_aes] = base_data_agg$A[row_ind, temp_aes] + temp_data$A
#   base_data_agg$nn[row_ind] = base_data_agg$nn[row_ind] + temp_data$nn
#   accu_data[[t+1]] = base_data_agg
#   
#   ### filter AE
#   base_data_sub = base_data_agg
#   AE_sum <- colSums(base_data_sub$A)
#   covid_sum <- colSums(base_data_sub$A[base_data_sub$V == 1, ])
#   flu_sum <- colSums(base_data_sub$A[base_data_sub$V == 0, ])
#   
#   base_data_sub$A = base_data_sub$A[, (AE_sum>= 25) & 
#                                       (covid_sum >= 1) &
#                                       (flu_sum >= 5)]
#   accu_data_sub[[t+1]] = base_data_sub
# }
# 
# save(data, base_data, seq_data, base_data_agg, seq_data_agg, accu_data, accu_data_sub,
#      file="~/Dropbox (University of Michigan)/VBVaccine/Rcode/data/COVID_FLU_2016_20230609_seq_age3.RData")
# 
# ##sanity check
# for(i in 1:num_t){
#   print(sort(unname(colSums(accu_data_sub[[i]]$A)),decreasing = F)[1:10])
#   print(sort(unname(colSums(accu_data_sub[[i]]$A[accu_data_sub[[i]]$V == 1, ])),decreasing = F)[1:10])
#   print(sort(unname(colSums(accu_data_sub[[i]]$A[accu_data_sub[[i]]$V == 0, ])),decreasing = F)[1:10])
#   print(sum(accu_data_sub[[i]]$nn) <sum(accu_data_sub[[i+1]]$nn) )
# }
# 



# data %>%
#     group_by(AE_NAME) %>%
#     mutate(n = length(unique(VAERS_ID))) %>%
#     filter(n >= 25) %>%
#     select(-n) %>%
#     ungroup()->
#     data
# 
# 
# 
# data %>%
#   filter(VAX_TYPE != "COVID19")%>%
#   group_by(AE_NAME) %>%
#   mutate(n = length(unique(VAERS_ID))) %>%
#   filter(n > 5) %>%
#   select(-n) %>%
#   ungroup()->
#   FLU
# 
# 
# data %>%
#   filter(VAX_TYPE == "COVID19")%>%
#   group_by(AE_NAME) %>%
#   mutate(n = length(unique(VAERS_ID))) %>%
#   filter(n >= 1) %>%
#   select(-n) %>%
#   ungroup() ->
#   COVID
# 
# data <- rbind(FLU, COVID)
# # 
# # data_id <- data[!duplicated(data$VAERS_ID),]
# # table(data_id$VAX_TYPE)
# # hist(data_id$AGE[!data_id$VAX_TYPE == "FLU"],main="AGE in covid19",xlab="age")
# 
# data %>%
#   #filter(AGE >= 18) %>%
#   # mutate(
#   #   Age1 = AGE < quantile(AGE, 1 / 3, names = FALSE),
#   #   Age2 = AGE < quantile(AGE, 2 / 3, names = FALSE),
#   #   Age = Age1 + Age2,
#   #   Male = as.numeric(SEX == 'M')
#   # ) %>%
#   mutate(Male = as.numeric(SEX == 'M')) %>%
#   # mutate(Age = case_when(AGE <= 0.5 ~ 1,
#   #                        AGE > 0.5 & AGE <= 5~ 2,
#   #                        AGE > 5 & AGE <= 17 ~ 3,
#   #                        AGE > 17 & AGE <= 35 ~ 4,
#   #                        AGE > 35 & AGE <= 50 ~ 5,
#   #                        AGE > 50 & AGE <= 65 ~ 0,
#   #                        AGE > 65 ~ 6))%>%
#   mutate(Age = case_when(AGE <= 18 ~ 0,
#                        AGE > 18 & AGE <= 60 ~ 1,
#                        AGE > 60 ~ 2))%>%
#   select(VAERS_ID, AE_NAME, VAX_TYPE, Age , Male, RECVDATE) ->
#   data
# table(data$Age)/nrow(data)
# table(data$Male)/nrow(data)
# # data %>%
# #   filter(AGE > 16,
# #          AE_NAME %in% MedDRA$PT) %>%
# #   mutate(
# #     Age = AGE,
# #     Male = as.numeric(SEX == 'M')
# #   ) %>%
# #   select(VAERS_ID, AE_NAME, VAX_TYPE, Age , Male, RECVDATE) ->
# #   data
# 
# 
# 
# 
# 
# 
# 
# # X <- expand.grid(unique(data$Age),unique(data$Male), unique(data$V))
# # X <- X[order(X[,1]), ]            
# # colnames(X) <- c("Age","Male", "V")      
# base_date = "2022-01-01"
# base_data <- data %>%
#   filter(data$RECVDATE < base_date)
# 
# flu_AE <- base_data %>%
#   filter(V == 0)%>%
#   group_by(AE_NAME) %>%
#   mutate(n = length(unique(VAERS_ID))) %>%
#   filter(n >3)%>%
#   pull(AE_NAME)%>%
#   unique()
# 
# 
# covid_AE <- base_data %>%
#   filter(V == 1)%>%
#   group_by(AE_NAME) %>%
#   mutate(n = length(unique(VAERS_ID))) %>%
#   filter(n >= 1)%>%
#   pull(AE_NAME)%>%
#   unique()
# common_AE = intersect(covid_AE, flu_AE)
# union_AE = union(covid_AE, flu_AE)
# union_AE = union_AE[!union_AE%in% common_AE]
# 
# base_data <- base_data %>%
#   filter(AE_NAME %in% common_AE)
# 
# #first only consider existing AEs
# seq_data <- data %>%
#   filter(data$RECVDATE >= base_date) %>%
#   #filter(AE_NAME %in% base_data$AE_NAME)%>%
#   filter(AE_NAME %in% common_AE)%>%
#   mutate(tempdate = cut(RECVDATE, breaks = "month"))
# seq_data <- split(seq_data, seq_data$tempdate)
# 
# 
# 
# # base_data_id <- base_data[!duplicated(base_data$VAERS_ID),]
# # age_freq <- data.frame(cbind(table(base_data_id$Age[base_data_id$V == 1]),
# #                              sapply(1:length(seq_data),function(i){
# #                                seq_data_id <- seq_data[[i]][!duplicated(seq_data[[i]]$VAERS_ID),]
# #                                as.vector(table(seq_data_id$Age[seq_data_id$V == 1]))})))
# # colnames(age_freq) = c("2016-2021", "2022.1~2022.3","2022.4~2022.6","2022.7~2022.9","2022.10~2022.12","2023.1~2023.3","2023.4~")
# # #rownames(age_freq) = c("0-4", "5-11", "12-17", "18-50", " 51-65"," >=65")
# # rownames(age_freq) = c("18-50", "0-17",  " 51-65"," >=65")
# #rownames(age_freq) = c("0-18", "19-60", ">=60")
# 
# # all_data_agg = aggregate_realdata(data)
# 
# library(Rcpp)
# compileAttributes("~/Dropbox (University of Michigan)/VBVaccine/Rcode/VBVaccine")
# devtools::load_all("~/Dropbox (University of Michigan)/VBVaccine/Rcode/VBVaccine")
# 
# base_data_agg = aggregate_realdata(base_data)
# 
# seq_data_agg = lapply(1:length(seq_data), function(i){
#   aggregate_realdata(seq_data[[i]])
# })
# 
# # sort(as.vector(colSums(base_data_agg$A)))
# # 
# # 
# # base_data_test = lapply(1:4,function(i){
# #   aggregate_realdata(rbind(base_data, do.call("rbind", seq_data[1:i])[,-7]))
# # })
# 
# #write.csv(data, file="~/Dropbox (University of Michigan)/VBVaccine/Rcode/data/COVID_FLU_2016_20221007.csv", row.names = F)
# save(base_data, seq_data, base_data_agg, seq_data_agg,
#      file = "~/Dropbox (University of Michigan)/VBVaccine/Rcode/data/COVID_FLU_2016_20230609_3age.RData")
# 
# # data<- read.csv("~/Dropbox (University of Michigan)/VBVaccine/Rcode/data/COVID_FLU_2016_20221007.csv")
# 
# # save(base_data, seq_data, base_data_agg, seq_data_agg,
# #      file = "~/Dropbox (University of Michigan)/VBVaccine/Rcode/data/COVID_FLU_2016_20230505_18stg.RData")
